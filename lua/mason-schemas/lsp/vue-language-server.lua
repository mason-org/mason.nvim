-- THIS FILE IS GENERATED. DO NOT EDIT MANUALLY.
-- stylua: ignore start
return {properties = {["typescript.tsdk"] = {type = "string"},["volar.doctor.status"] = {default = true,description = "Show known problems in status bar.",type = "boolean"},["volar.format.initialIndent"] = {default = {html = true},description = "Whether to have initial indent.",properties = {css = {default = false,type = "boolean"},html = {default = true,type = "boolean"},jade = {default = false,type = "boolean"},javascript = {default = false,type = "boolean"},javascriptreact = {default = false,type = "boolean"},json = {default = false,type = "boolean"},json5 = {default = false,type = "boolean"},jsonc = {default = false,type = "boolean"},less = {default = false,type = "boolean"},sass = {default = false,type = "boolean"},scss = {default = false,type = "boolean"},typescript = {default = false,type = "boolean"},typescriptreact = {default = false,type = "boolean"}},type = "object"},["volar.icon.splitEditors"] = {default = false,description = "Show split editor icon in title area of editor.",type = "boolean"},["volar.splitEditors.layout.left"] = {default = { "script", "scriptSetup", "styles" },type = "array"},["volar.splitEditors.layout.right"] = {default = { "template", "customBlocks" },type = "array"},["volar.takeOverMode.extension"] = {default = "Vue.volar",description = "The extension that take over language support for *.ts.",type = "string"},["volar.vueserver.additionalExtensions"] = {default = {},description = "List any additional file extensions that should be processed as Vue files (requires restart).",items = {type = "string"},type = "array"},["volar.vueserver.configFilePath"] = {default = "./volar.config.js",description = "Path to volar.config.js.",type = "string"},["volar.vueserver.diagnosticModel"] = {default = "push",description = "Diagnostic update model.",enum = { "push", "pull" },enumDescriptions = { "Diagnostic push by language server.", "Diagnostic pull by language client." },type = "string"},["volar.vueserver.fullCompletionList"] = {default = false,description = "Enable this option if you want to get complete CompletionList in language client. (Disable for better performance)",type = "boolean"},["volar.vueserver.json.customBlockSchemaUrls"] = {type = "object"},["volar.vueserver.maxFileSize"] = {default = 20971520,description = "Maximum file size for Vue Server to load. (default: 20MB)",type = "number"},["volar.vueserver.maxOldSpaceSize"] = {default = vim.NIL,description = 'Set --max-old-space-size option on server process. If you have problem on frequently "Request textDocument/** failed." error, try setting higher memory(MB) on it.',type = { "number", "null" }},["volar.vueserver.petiteVue.processHtmlFile"] = {default = false,type = "boolean"},["volar.vueserver.reverseConfigFilePriority"] = {default = false,description = "Reverse priority for tsconfig pickup.",type = "boolean"},["volar.vueserver.vitePress.processMdFile"] = {default = false,type = "boolean"},["vue-semantic-server.trace.server"] = {default = "off",description = "Traces the communication between VS Code and the language server.",enum = { "off", "messages", "verbose" },scope = "window",type = "string"},["vue-syntactic-server.trace.server"] = {default = "off",description = "Traces the communication between VS Code and the language server.",enum = { "off", "messages", "verbose" },scope = "window",type = "string"},["vue.features.autoInsert.bracketSpacing"] = {default = true,description = "Auto add space between double curly brackets: {{|}} -> {{ | }}",type = "boolean"},["vue.features.autoInsert.dotValue"] = {default = false,description = "Auto-complete Ref value with `.value`.",type = "boolean"},["vue.features.autoInsert.parentheses"] = {default = true,description = "Auto-wrap `()` to As Expression in interpolations for fix issue #520.",type = "boolean"},["vue.features.codeActions.enable"] = {default = false,description = "Enabled code actions.",type = "boolean"},["vue.features.codeLens.enable"] = {default = true,description = "Enabled code lens.",type = "boolean"},["vue.features.complete.normalizeComponentImportName"] = {default = true,description = 'Normalize import name for auto import. ("myCompVue" -> "MyComp")',type = "boolean"},["vue.features.complete.propNameCasing"] = {default = "autoKebab",description = "Preferred attr name case.",enum = { "autoKebab", "autoCamel", "kebab", "camel" },enumDescriptions = { 'Auto Detect from Content (Fallback to :kebab-case="..." if detect failed)', 'Auto Detect from Content (Fallback to :camelCase="..." if detect failed)', ':kebab-case="..."', ':camelCase="..."' },type = "string"},["vue.features.complete.tagNameCasing"] = {default = "autoPascal",description = "Preferred tag name case.",enum = { "autoKebab", "autoPascal", "kebab", "pascal" },enumDescriptions = { "Auto Detect from Content (Fallback to <kebab-case> if detect failed)", "Auto Detect from Content  (Fallback to <PascalCase> if detect failed)", "<kebab-case>", "<PascalCase>" },type = "string"},["vue.features.inlayHints.inlineHandlerLeading"] = {default = false,description = "Show inlay hints for event argument in inline handlers.",type = "boolean"},["vue.features.inlayHints.missingProps"] = {default = false,description = "Show inlay hints for missing required props.",type = "boolean"},["vue.features.updateImportsOnFileMove.enable"] = {default = false,description = "Enabled update imports on file move.",type = "boolean"}},title = "Volar",type = "object"}